version: '3.9'

services:
  grpcserv:
    build: ./grpcServ
    container_name: grpcserv
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    command: [ "sh", "-c", "/bin/ls app && /app/migrate && /app/main" ]
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=myapp_db
      - POSTGRES_USER=myapp_user
      - POSTGRES_PASSWORD=myapp_pass
    ports:
      - "9000:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myapp_user -d myapp_db" ]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always






#    env_file:
#      - ./proxy/.env
#    networks:
#      - localnet
#networks:
#  localnet:
#    driver: bridge